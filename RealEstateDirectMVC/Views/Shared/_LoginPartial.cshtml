@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor

<ul class="navbar-nav">
    @if (HttpContextAccessor.HttpContext.User.Identity?.IsAuthenticated == true)
    {
        <li class="nav-item">
            <a class="nav-link" asp-controller="Home" asp-action="Profile" title="Manage">
                Profile @HttpContextAccessor.HttpContext.User.Identity.Name!
            </a>
        </li>
        <li class="nav-item">
            <form method="post" action="/Account/Logout">
                <button type="submit" class="btn btn-outline-success me-2">Logout</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="btn btn-outline-success me-2" asp-controller="Account" asp-action="Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="btn btn-outline-primary" asp-controller="Account" asp-action="Login">Login</a>
        </li>
    }
</ul>
@* @using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
    <li class="nav-item">
            <a class="nav-link" asp-controller="Home" asp-action="Profile" title="Manage">Profile @User.Identity?.Name!</a>
    </li>
    <li class="nav-item">
        <form  class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button type="submit" class="btn btn-outline-success me-2">Logout</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
            <a class="btn btn-outline-success me-2" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
    <li class="nav-item">
            <a class="btn btn-outline-primary" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}
</ul>
 *@